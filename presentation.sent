Why go?

О себе:
- Фанатик технологий
- Есть опыт в embedded и backend разработке

I use Arch btw

План:
- Плюсы
- Ни туда ни сюда
- Минусы

Плюсы:

> Инициализация проекта

@img/project_go_init.png

> Компиляция

@img/hello_world.png

@img/simple_compilation.png

@img/compilation_c_make.png

@img/compilation_go_make.png

> Кросскомпиляция

C
- Найти компилятор под другую платформу
- Возможно еще и скомпилировать его придется
- Только после этого собрать приложение
- А еще собрать все зависимости под платформу

go
- GOOS=windows GOARCH=amd64 go build -o bin main.go
- GOOS=darwing GOARCH=arm64 go build -o bin main.go

{"aix", "ppc64"},
{"android", "386"}, {"android", "amd64"}, {"android", "arm"}, {"android", "arm64"},
{"darwin", "amd64"}, {"darwin", "arm64"},
{"dragonfly", "amd64"},
{"freebsd", "386"}, {"freebsd", "amd64"}, {"freebsd", "arm"}, {"freebsd", "arm64"}, {"freebsd", "riscv64"},
{"illumos", "amd64"},
{"ios", "amd64"}, {"ios", "arm64"},
{"js", "wasm"},
{"linux", "386"}, {"linux", "amd64"}, {"linux", "arm"}, {"linux", "arm64"}, {"linux", "loong64"},
{"linux", "mips"}, {"linux", "mips64"}, {"linux", "mips64le"}, {"linux", "mipsle"},
{"linux", "ppc64"}, {"linux", "ppc64le"}, {"linux", "riscv64"}, {"linux", "s390x"}, {"linux", "sparc64"},
{"netbsd", "386"}, {"netbsd", "amd64"}, {"netbsd", "arm"}, {"netbsd", "arm64"},
{"openbsd", "386"}, {"openbsd", "amd64"}, {"openbsd", "arm"}, {"openbsd", "arm64"}, {"openbsd", "mips64"},
{"openbsd", "ppc64"}, {"openbsd", "riscv64"},
{"plan9", "386"}, {"plan9", "amd64"}, {"plan9", "arm"},
{"solaris", "amd64"},
{"wasip1", "wasm"},
{"windows", "386"}, {"windows", "amd64"}, {"windows", "arm"}, {"windows", "arm64"},

> Строгая типизация

@img/strict_type_go.png

> Возврат нескольких значений

@img/return.png

> Статическая линковка

@img/static_linking.png

@img/static_linking_go.png

> Embed (1.16)
(!= embedding)

@img/embed.png

> Unit тесты

@img/unit_test_main.png

@img/unit_test_test.png

@img/unit_test_run.png

> Benchmark

@img/bench_test_main.png

@img/bench_test_test.png

@img/bench_test_run.png

> Race checker

> Fuzzing тестирование (1.18)

@img/fuzz_test_test.png

@img/fuzz_test_run.png

> Менеджер пакетов
> Подключение новых библиотек

> Кодстайл

@img/codestyle.png

Ни туда ни сюда:

> heap escape

@img/heap_escape.png

@img/heap_escape_example.png

> Garbage collector

> Нельзя средствами языка написать map

> Нельзя писать под embedded устройства

Минусы:

> __attribute__((__packed__))
> Нет прямого маппинга структуры в бинарные данные

@img/packed.png

> Нет const в прототипах функции

@img/const_1.png

@img/const_2.png

> Кросскомпиляция

@img/thank_you.png

https://github.com/HardDie/meetup_why_go_slides
